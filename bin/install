#!/usr/bin/env bash

print_usage() {
  echo -e "Unsupported option: $@"
  echo -e "Supported options:"
  echo -e "\t-u, --update          \tUpdate all plugins."
  echo -e "\t-n, --non-interactive \tDon't show vim while installing plugins."
}

INTERACTIVE=1
UPDATE=0

while [[ $# > 0 ]]
do
  key="$1"

  case $key in
    -n|--non-interactive)
      INTERACTIVE=0
      shift
      ;;
    -u|--update)
      UPDATE=1
      shift
      ;;
    *)
      print_usage $key
      exit 1
      ;;
  esac
  shift
done

FILES_TO_LINK="vimrc gvimrc"
LOCALS=".vimrc.local.before .vimrc.local .vimrc.local.plugins"

DIR=$(cd $(dirname $0) && pwd)
if [ $(basename $DIR) == "bin" ]; then
  DIR=$(cd ${DIR}/.. && pwd)
fi

if [ "$DIR" != "$HOME/.vim" ]; then
  dot_file=$HOME/.vim
  if [ ! -e $dot_file ]; then
    echo "Detected clone outside of ~/.vim, symlinking"
    ln -s $DIR $dot_file
  fi
fi

mkdir -p ${XDG_CONFIG_HOME:=$HOME/.config}
if [ ! -e $XDG_CONFIG_HOME/nvim ]; then
  ln -s $DIR $XDG_CONFIG_HOME/nvim
fi

pushd $DIR

if [ -e $DIR/bundle ]; then
  rm -rf $DIR/bundle
fi

git submodule update --init --recursive

for file in $LOCALS; do
  dot_file=$HOME/$file
  touch $dot_file
done

for file in $FILES_TO_LINK; do
  dot_file=$HOME/.$file
  if [ ! -e $dot_file ]; then
    ln -s $DIR/$file $dot_file
  fi
done

green='\033[0;32m'
yellow='\033[0;33m'
bold=`tput bold`
normal=`tput sgr0`
end_color='\033[0;m'

if which go > /dev/null; then
  echo -e "${yellow}INSTALL${end_color} ${bold}golang${normal} dependencies..."
  gopackages="\
    github.com/golang/lint/golint \
    github.com/jstemmer/gotags \
    github.com/kisielk/errcheck \
    github.com/nsf/gocode \
    golang.org/x/tools/cmd/godoc \
    golang.org/x/tools/cmd/goimports \
    golang.org/x/tools/cmd/gorename \
    golang.org/x/tools/cmd/oracle \
    "

  for p in $gopackages; do
    echo -e "\t${yellow}INSTALL${end_color} ${bold}${p}${normal}..."
    go get -f -u $p
    echo -e "\t${green}DONE${end_color}    ${bold}${p}${normal}"
  done
  echo -e "${green}DONE${end_color}    ${bold}golang${normal} dependencies"
fi

vim -c 'PlugInstall' -c 'qall'
vim -c 'UpdateRemotePlugins' -c 'qall'
vim -c 'GoInstallBinaries' -c 'qall'

popd
